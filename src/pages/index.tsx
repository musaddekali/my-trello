import { FunctionComponent, Ref, useEffect, useRef, useState } from "react";
import { Form, Input, Button, Checkbox } from "antd";
import { CloseOutlined } from "@ant-design/icons";
import Head from "next/head";
import { v4 as uuidv4 } from "uuid";

type Data = {
  id: string;
  text: string;
  isDone: boolean;
  isEdit: boolean;
};

export default function Home() {
  const [data, setData] = useState<Data[]>([]);
  const [form] = Form.useForm();

  const addData = (values: { text: string }) => {
    setData([
      {
        id: uuidv4(),
        ...values,
        isDone: false,
        isEdit: false,
      },
      ...data,
    ]);

    form.resetFields();
  };

  function updateData(dataId: string, key: string, value: string | boolean) {
    let updatedData = data.map((item) => {
      if (item.id === dataId) {
        item[key] = value;
      }
      return item;
    });
    setData(updatedData);
  }

  return (
    <>
      <Head>
        <title>Check List App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="container">
          {/* Form  */}
          <div className="mt-5 w-1/2 mx-auto shadow p-4 rounded-md">
            <Form form={form} onFinish={addData} layout="vertical">
              <Form.Item
                rules={[{ required: true, message: "Please insert some text" }]}
                name="text"
                label="Add new item"
              >
                <Input.TextArea size="large" placeholder="Add new item..." />
              </Form.Item>
              <Form.Item className="mb-0">
                <Button
                  size="large"
                  className="bg-blue-500 hover:bg-blue-600"
                  type="primary"
                  htmlType="submit"
                >
                  Add
                </Button>
              </Form.Item>
            </Form>
          </div>
          {/* End form  */}
          <div className="data_list mt-10">
            <CheckLists updateData={updateData} allData={data} />
          </div>
        </div>
      </main>
    </>
  );
}

const CheckLists = ({ allData, updateData }: any) => {
  return (
    <ul className="flex flex-col gap-3">
      {allData?.length > 0 ? (
        allData.map((item: Data) => {
          return <ListItem updateData={updateData} key={item.id} data={item} />;
        })
      ) : (
        <h4 className="p-4 bg-orange-500 text-white text-lg text-center rounded-md shadow-lg">
          No Data available
        </h4>
      )}
    </ul>
  );
};

const ListItem = ({ data, updateData }: any) => {
  const { id, text, isDone, isEdit } = data;
  const editField = useRef<any>(null);

  useEffect(() => {
    if (isEdit) {
      editField.current?.focus();
    } else {
      editField.current?.blur();
    }
  }, [isEdit]);

  return (
    <li className="data_list_item p-4 rounded-md shadow">
      <div className="flex gap-2">
        <Checkbox
          onChange={(e) => updateData(id, "isDone", e.target.checked)}
        />
        {!isEdit ? (
          <p
            onClick={() => updateData(id, "isEdit", true)}
            className={`${isDone ? "line-through" : ""} whitespace-break-spaces cursor-pointer`}
          >
            {text}
          </p>
        ) : (
          <div className="w-full">
            <Input.TextArea
            className="text-normal"
              ref={editField}
              value={text}
              onChange={(e) => updateData(id, "text", e.target.value)}
              onBlur={() => updateData(id, "isEdit", false)}
            />
            <div className="mt-3 flex gap-3">
              <Button className="bg-blue-500 hover:bg-blue-600" type="primary">
                Save
              </Button>
              <Button danger onClick={() => updateData(id, "isEdit", false)}>
                <CloseOutlined />
              </Button>
            </div>
          </div>
        )}
      </div>
    </li>
  );
};
